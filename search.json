[{"title":"渗透测试基本思路","date":"2021-08-05T07:12:05.000Z","url":"/2021/08/05/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%9F%BA%E6%9C%AC%E6%80%9D%E8%B7%AF/","tags":[["信息收集","/tags/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"],["漏洞扫描","/tags/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F/"]],"categories":[["渗透","/categories/%E6%B8%97%E9%80%8F/"]],"content":"​ 有人问我，渗透到底做啥，web渗透到底是干什么，当你拿到一个待检测得站或网站，需要做什么。以我得经验其实web渗透是一个非常简单得事情。今天我就以个人经验来谈一谈怎么去渗透一个网站。 一、信息收集 获取域名的 whois 信息,获取注册者邮箱姓名电话等。 通过站长之家、明小子、k8 等查询服务器旁站以及子域名站点，因为主站一般比较难， 所以先看看旁站有没有通用性的 cms 或者其他漏洞。 3、通过 DNS 域传送漏洞、备份号查询、SSl 证书、APP、微信公众号、暴力破解、DNS 历史记录、K8 C 段查询、Jsfinder、360 或华为威胁情报、证书序列号获取企业域名与 ip。 4、通过 Nmap、Wappalyzer、御剑等查看服务器操作系统版本，web 中间件，看看是否存在已知的漏洞，比如 IIS，APACHE,NGINX 的解析漏洞 通过 7KB、破壳扫描网站目录结构，看看是否可以遍历目录，或者敏感文件泄漏，比如php 探针、管理员备份文件。 google hack 进一步探测网站的信息，后台，敏感文件 7、敏感信息收集，如 github 源码、用 7kb、破壳扫源代码泄露（.hg、.git、cvs、svn、.DS_store 源代码泄露）、google hack、接口信息泄露、社工信息泄露、邮箱地址信息收集、网盘搜索、钟馗之眼、天眼查、威胁情报、微步在线等 8、通过Wappalyzer、御剑工具对网站指纹识别（包括，cms，cdn，证书等），dns 记录 二、漏洞扫描 用 AWVS、APPSCAN、长亭科技的 Xray 等扫描器检测 Web 漏洞，如 XSS,XSRF,sql 注入，代码执行，命令执行，越权访问，目录读取，任意文件读取，下载，文件包含， 远程命令执行，弱口令，上传，编辑器漏洞，暴力破解等 用 namp、天镜、Nessus、极光等扫描系统 ip，对扫描出来的高危漏洞进行测试，如ms08-067、ms17-010、ms12-020、ms15-035、ms19-0708、永恒之蓝 2 代、cve-2017-7494（samba）、cve-2014-6271(破壳)、php cgi 等相关漏洞验证。 3.漏洞利用 利用以上的方式拿到 webshell，或者其他权限 4.权限提升 提权服务器，比如 windows 下 mysql 的 udf 提权，serv-u 提权，windows 低版本的漏洞， 如 iis6,pr,巴西烤肉，linux 脏牛漏洞，linux 内核版本漏洞提权，linux 下的 mysql system 提权以及 oracle 低权限提权 5.日志清理 操作系统、中间件、数据库等日志进行清除 6.总结报告及修复方案"},{"title":"SQL手工注入入门教程","date":"2021-08-03T09:11:01.000Z","url":"/2021/08/03/%E6%B8%97%E9%80%8F%E7%AC%AC%E4%B8%80%E8%AF%BE/","tags":[["mysql基本hack函数","/tags/mysql%E5%9F%BA%E6%9C%AChack%E5%87%BD%E6%95%B0/"],["判断字符的一些语句","/tags/%E5%88%A4%E6%96%AD%E5%AD%97%E7%AC%A6%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AF%AD%E5%8F%A5/"],["LOAD_FILE","/tags/LOAD-FILE/"],["get与post请求注释符的区别","/tags/get%E4%B8%8Epost%E8%AF%B7%E6%B1%82%E6%B3%A8%E9%87%8A%E7%AC%A6%E7%9A%84%E5%8C%BA%E5%88%AB/"],["AND与OR的区别","/tags/AND%E4%B8%8EOR%E7%9A%84%E5%8C%BA%E5%88%AB/"],["union联合查询注入","/tags/union%E8%81%94%E5%90%88%E6%9F%A5%E8%AF%A2%E6%B3%A8%E5%85%A5/"],["基于布尔值的盲注","/tags/%E5%9F%BA%E4%BA%8E%E5%B8%83%E5%B0%94%E5%80%BC%E7%9A%84%E7%9B%B2%E6%B3%A8/"],["延时注入","/tags/%E5%BB%B6%E6%97%B6%E6%B3%A8%E5%85%A5/"],["post注入","/tags/post%E6%B3%A8%E5%85%A5/"]],"categories":[["渗透","/categories/%E6%B8%97%E9%80%8F/"]],"content":"mysql基本hack函数：mid SELECT MID(ColumnName, Start [, Length]) FROM TableName LEFT(str,len) 返回字符串str的最左面len个字符 ASCII(str) =ORD 返回字符串str的最左面字符的ASCII代码值。如果str是空字符串，返回0。如果str是NULL，返回NULL SUBSTR(str,pos,len) 从str中多少个字符开始，截取多少位 CAST SELECT CAST(’12’ AS int) 将目标str转化为目标数据类型 IFNULL(expr1,expr2) 如果expr1不是NULL，IFNULL()返回expr1，否则它返回expr2 updatexml() extracavalue() 判断字符的一些语句： LOAD_FILE加载本地文件（服务器上） 说明：“char(99,58,47,98,111,111,116,46,105,110,105)”就是“c:/boot.ini”的 ASCII 代码 说明：“c:/boot.ini”的 16 进制是“0x633a2f626f6f742e696e69” select load_file(‘c:\\wamp\\bin\\mysql\\mysql5.6.17\\my.ini’) into outfile‘c:\\wamp\\www\\test.php’ 可以将其他路径的文件导到web目录来供访问，一般用于把包含一句话木马的文件导出成php来链接 get与post请求注释符的区别一般很容易在各种教程上看到 ‘ or and 1=1 # 或 ‘ or and 1=1 –+ 但可能没人告诉你什么情况下该用什么。 #是sql语句中的注释符，+ 在http请求中表示空格，但get与post中，由于http请求的转义，请求到后端sql语句拼接的时候可能会不一样。 get请求的时候一般用: 1′ and 1=1 –+ //这里最后的空格用+，在请求的时候不会被urlencode，到后端sql语句中就会成为一个正常的空格，– 后面的语句就会被注释。 但是如果在post里最后用加号的话就会被urlencode成%2B，实际的空格被转义才被转义成+ post请求的时候一般用： 这时候，在post的情况下，最后一个空格，可以直接用空格，不用+来代替，因为post参数 空格会自动转成+； 而之所以不在get注入的时候使用“#”来注释，是因为，请求时，“#”不会被urlencode为“%23”，被识别为锚链接，无法传递至sql语句中。 找一个库中有哪些表名： 找一个表中有哪些列名： AND与OR的区别需要理解 and和or的区别 场景举例： 没有订单可以测的情况下，只能用or union联合查询注入当union前面的语句为false时才会执行后面语句（这里一定先学习union查询的用法） 如以下，union语句前 先构建一个错误条件。 union与order by 后面跟着的列数是跟前面的select 列数相同的，不是该表的总列数 总列数判断为： 解释：如果列数为2，则延时5秒响应。 判断某列是否存在也可以用： 当union查同库其他表时，需要知道库名： 如： 读文件/写shell这里包含了网上常见或不常见的导出一句话的骚操作 支持union的方法，最常规的方式： 16进制写shell 其中上面的16 进制组合成的是一个一句话，其实这样的sql可以过waf 利用分隔符写shell 如果不支持union，可以用分隔符导出一句话，当然字段数要大于2。 修改sql日志路径到web下的一个php文件 读文件： 基于布尔值的盲注可以通过响应的不同可以判断sql语句是否正确 枚举字符来判断字符是否存在 mysql的一些特征： 当试探第二个表的时候并不是改为limit1,1，因为limit针对的是条件筛选后的过滤，所以测试其他表的时候，继续修改正则即可，如果us[a-z]为1，ua[a-z]，说明至少有两个表，一个表以us开头，另一个ua开头 标准的正则布尔测试： 比如判断数据库版本： 判断是否条件成立的其他方法： 盲注流程获取库名： and%20ord(substr(database(),1,1))&gt;80+–+ 获取表名： 利用 substr() ascii()函数进行尝试 获取字段名： 获取表数据： 通过dns获取盲注数据： 由于union后必须跟上与前面同样的字段数，所以需要把load_file放在其中，非union直接select load_file即可 dns获取盲注数据示例： \\foobar 后面要有一串任意字符，访问远程目录的意思，所以这个“foobar”可以用任意字符替换。 还可以： 延时注入适用于当我们测试的时候没有任何回显来判断是否有注入，比如订单搜索，比如当sql错误的时候返回与正确的相同，我们就无法通过回显差异来判断注入 如下图代码，成立与否页面不变化 延时注入 适用于当我们测试的时候没有任何回显来判断是否有注入，比如订单搜索，比如当sql错误的时候返回与正确的相同，我们就无法通过回显差异来判断注入 如下图代码，成立与否页面不变化 所以就需要通过判断是否延时来确认是否有注入 如果过滤逗号，可以： 还可以利用 union select 加 order by 逐字猜解… 假设，name 是 admin 当 猜出第一个字母为 ‘a’ 时，’a’=’a’及真。用 0，1表示的话就是1，然后 sleep(15)，如果是假，那就是sleep(05)… 先基本判断有没有延时，然后在load_file来dns查询 可以 post注入最大的区别在于注释符的使用，and改为or而已 如： 参考文章："},{"title":"hexo 命令行","date":"2021-08-02T15:34:52.121Z","url":"/2021/08/02/hexo%E5%91%BD%E4%BB%A4%E8%A1%8C/","categories":[["undefined",""]],"content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post More info: Writing Run server More info: Server Generate static files More info: Generating Deploy to remote sites More info: Deployment"},{"title":"hello-world","date":"2021-05-02T09:30:00.000Z","url":"/2021/05/02/my-first-blog/","categories":[["日常","/categories/%E6%97%A5%E5%B8%B8/"]],"content":"Hello, World是指在电脑屏幕显示“Hello, World!”（你好，世界！）字符串的计算机程序。相关的程序通常都是每种电脑编程语言最基本、最简单的程序，也会用作示范一个编程语言如何运作。同时它亦可以用来确认一个编程语言的编译器、程序开发环境及运行环境是否已经安装妥当。因为写法简单可见，这也是很多初学者首次接触编程语言时会撰写的程序。 成功啦o(￣▽￣)ブ 有危险Σ(っ °Д °;)っ 有消息(・∀・(・∀・(・∀・*) 当心哦≧ ﹏ ≦ 折叠框的标题 被折叠的内容 1被折叠的内容 2… TYPE是面板框的类型，可以是： successsdangerinfowarning "}]